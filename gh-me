#!/bin/bash

for cmd in gh jq column; do
  if ! type -p "$cmd" >/dev/null; then
    echo "$cmd is required but not found. Please install it." >&2
    exit 1
  fi
done

COMMAND="${1:-prs}"
shift

INCLUDE_DRAFTS=false
ORG_FILTER=""

for arg in "$@"; do
  case "$arg" in
    --draft) INCLUDE_DRAFTS=true ;;
    --org=*) ORG_FILTER="${arg#--org=}" ;;
    *)
      echo "Unknown option: $arg" >&2
      echo "Usage: gh-me [prs|issues|reviews] [--draft] [--org=<organization>]"
      exit 1
      ;;
  esac
done

QUERY_ISSUES="query {
  search(query: \"org:$ORG_FILTER is:issue is:open\", type: ISSUE, first: 10) {
    nodes {
      ... on Issue {
        number
        title
        url
        repository {
          nameWithOwner
        }
      }
    }
  }
}"

QUERY_PRS="query {
  search(query: \"org:$ORG_FILTER is:pr is:open\", type: ISSUE, first: 100) {
    nodes {
      ... on PullRequest {
        number
        title
        url
        reviewDecision
        repository {
          nameWithOwner
        }
        isDraft
      }
    }
  }
}"

QUERY_REVIEWS="query {
  search(query: \"org:$ORG_FILTER is:pr is:open review-requested:@me\", type: ISSUE, first: 10) {
    nodes {
      ... on PullRequest {
        number
        title
        url
        repository {
          nameWithOwner
        }
      }
    }
  }
}"

TEMPLATE_ISSUES="{{tablerow \"\033[37mISSUE#\033[0m\" \"\033[37mREPOSITORY\033[0m\" \"\033[37mTITLE\033[0m\" \"\033[37mURL\033[0m\"}}{{range .data.search.nodes}}{{tablerow (printf \"\033[97m#%v\033[0m\" .number) (printf \"\033[96m%s\033[0m\" .repository.nameWithOwner) .title (printf \"\033[92m%s\033[0m\" .url)}}{{end}}{{tablerender}}"

TEMPLATE_PRS="{{tablerow \"\033[37mPR#\033[0m\" \"\033[37mREPOSITORY\033[0m\" \"\033[37mTITLE\033[0m\" \"\033[37mREVIEW\033[0m\" \"\033[37mURL\033[0m\"}}{{range .data.search.nodes}}{{if or $INCLUDE_DRAFTS (not .isDraft)}}{{tablerow (printf \"\033[97m#%v\033[0m\" .number) (printf \"\033[96m%s\033[0m\" .repository.nameWithOwner) .title (printf \"\033[94m%s\033[0m\" (or .reviewDecision \"PENDING\")) (printf \"\033[92m%s\033[0m\" .url)}}{{end}}{{end}}{{tablerender}}"

TEMPLATE_REVIEWS="{{tablerow \"\033[37mPR#\033[0m\" \"\033[37mREPOSITORY\033[0m\" \"\033[37mTITLE\033[0m\" \"\033[37mURL\033[0m\"}}{{range .data.search.nodes}}{{tablerow (printf \"\033[97m#%v\033[0m\" .number) (printf \"\033[96m%s\033[0m\" .repository.nameWithOwner) .title (printf \"\033[92m%s\033[0m\" .url)}}{{end}}{{tablerender}}"

case "$COMMAND" in
  prs)
    exec gh api graphql -f query="$QUERY_PRS" --paginate --template="$TEMPLATE_PRS"
    ;;
  issues)
    exec gh api graphql -f query="$QUERY_ISSUES" --paginate --template="$TEMPLATE_ISSUES"
    ;;
  reviews)
    exec gh api graphql -f query="$QUERY_REVIEWS" --paginate --template="$TEMPLATE_REVIEWS"
    ;;
  *)
    echo "Usage: gh-me [prs|issues|reviews] [--draft] [--org=<organization>]" >&2
    exit 1
    ;;
esac
